The FreeType 2 demo programs can now be built with the Meson Build System.

Requirements
------------

The Meson build tool and its dependencies must be installed, as well as a
C and a C++ compiler.

If Qt5 development libraries are available on your system, the `ftinspect`
program will be compiled and linked against them, or ignored otherwise.

A FreeType 2 source repository is always required to build some of the test
programs, because they depend on internal headers of the library
(e.g. `ttdebug`).

By default, the first run of `meson setup BUILD_DIR` will clone the HEAD
revision of the FreeType2 git repository under `subprojects/freetype2`.

You can however use any other revision, using one of these methods *before*
running `meson setup`:

  - Modify the content of `subprojects/freetype2.wrap` to point
    to your chosen URL and/or revision.

  - Alternatively, create or replace `subprojects/freetype2` with a symlink to
    or a copy of the FreeType2 source tree of your chosing.


Quick Compilation Instructions
------------------------------

  # Setup build directory named 'build.meson', and optionally clone
  # FreeType2 source repository, as explained previously.

  meson setup build.meson

  # Compile all demo programs
  #
  # You should be able to be able to run all programs directly from
  # the build.meson/ directory.
  #

  meson compile -C build.meson


Installation with the `meson install`
-------------------------------------

First, keep in mind that the FreeType demo programs are mostly used to
develop and debug FreeType, it is very unlikely that you would want to
install them on your system. Nevertheless, if that's what you want,
the `meson install` command will work, with a big caveat: it will also
install the FreeType2 headers, libraries and configuration files as well!

This is the default behaviour for `meson install`, and can be undesirable.
Fortunately, Meson 0.58 and above support the `--skip-subprojects` option
to override this
(https://mesonbuild.com/Release-notes-for-0-58-0.html#skip-subprojects-installation)

A clean build + install using Meson 0.58 or above looks like:

  # Setup compilation to build and install the stripped demo programs to
  # the /opt directory, instead of the default (i.e. /usr/local on Linux).
  #
  # Note the extra options set here:
  #
  #  * strip=true ensures the installed binaries are properly stripped.
  #  * buildtype=release ensures the binaries are fully optimized.

  meson setup build.meson -Dstrip=true -Dbuildtype=release --prefix=/opt
  meson install -C build.meson --skip-subprojects

For older Meson releases, simply do not use `--skip-subprojects` and remove the
extra files manually. For example, assuming that FreeType2 was **not** already
installed under `/opt`, one could do:

  meson setup build.meson -Dstrip=true -Dbuildtype=release --prefix=/opt
  meson install -C build.meson
  rm /opt/lib/x86_64-linux-gnu/libfreetype.a
  rm /opt/lib/x86_64-linux-gnu/pkgconfig/freetype2.pc
  rm -rf /opt/include/freetype2

Note that by default, all binaries are statically linked to the FreeType library.
This is useful for debugging, and also to ensure that the programs always use the
exact FreeType 2 version they were compiled against at runtime (which could be
broken if your library search path is not set correctly).

It is possible to build and link against the shared library instead, by adding the
`-Dfreetype2:default_library=shared` option, as in:

  meson setup build.meson \
    -Dstrip=true \
    -Dbuildtype=release \
    -Dfreetype2:default_library=shared \
    --prefix=/opt \
    
  meson install -C build.meson --skip-subprojects

Note that `--skip-subprojects` will prevent installation of the FreeType 2
shared library to the destination directory. Do not use if you want to install
the library as well (along its headers and config files).

